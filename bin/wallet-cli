#!/usr/bin/env node

'use strict';

process.title = 'wallet-cli';

var version = require('../package.json').version;
var program = require('commander');

var Client = require('../lib/client');
var Config = require('../lib/config');

program
  .version(version)
  .description('Bitcoin Wallet CLI')
  .option('-u, --url <url>', 'Specify the URL for the wallet server.')
  .option('-c, --config <dir>', 'Specify the data directory that has the configuration file.')
  .option('-t, --testnet', 'Use testnet network')
  .option('-r, --regtest', 'Use regtest network')
  .parse(process.argv);

var network = 'livenet';
if (program.testnet) {
  network = 'testnet';
} else if (program.regtest) {
  network = 'regtest';
}

var client;
if (program.config && program.url) {
  throw new Error('--config and --url are mutually exclusive, please use one or the other.');
} else if (program.config) {
  var config = new Config({network: network});
  var url = config.getURLSync();
  client = new Client({network: network, url: url});
} else if (program.url) {
  client = new Client({network: network, url: program.url});
}

program
  .command('importKey <address>')
  .description('Import a new address')
  .action(function(address) {
    client.importKey(address, function(err, body) {
      if (err) {
        throw err;
      }
      console.log(body);
    });
  });

program
  .command('getTransactions')
  .description('View latest transactions for a wallet')
  .action(function() {
    client.getTransactions(function(err, body) {
      if (err) {
        throw err;
      }
      console.log(body);
    });
  });

program
  .command('getTxids')
  .description('View latest txids for a wallet')
  .action(function() {
    client.getTxids(function(err, body) {
      if (err) {
        throw err;
      }
      console.log(body);
    });
  });

program.parse(process.argv);

if (process.argv.length === 2) {
  program.help();
}
